<?xml version="1.0"?>
<launch>

  <arg name="world_name" default="tunnel_qual_ign" />
  <arg name="x3_name" default="X3" />
  <arg name="robot_namespace" default="$(arg x3_name)"/>

  <group ns="$(arg x3_name)">
    <node pkg="robot_localization" type="ukf_localization_node"
          name="robot_localization_ukf_node_odom">
      <param name="frequency" value="1000." />
      <param name="sensor_timeout" value="0.2" />
      <param name="two_d_mode" value="false" />
      <param name="odom_frame" value="$(arg x3_name)/odom" />
      <param name="base_link_frame" value="$(arg x3_name)" />
      <param name="base_link_frame_output" value="$(arg x3_name)" />
      <param name="world_frame" value="$(arg x3_name)/odom" />
      <param name="publish_tf" value="false" />
      <param name="imu0" value="imu/data" />
      <rosparam param="imu0_config">
        [false, false, false, true, true, true,
        true, true, true, true, true, true,
        true, true, true]</rosparam>
    </node>
    <!-- Spawn a position controller -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="subt_rotors_controller" type="roll_pitch_yawrate_thrust_controller_node" output="screen" respawn="true">
      <rosparam command="load" file="$(find x3_control)/resource/roll_pitch_yawrate_thrust_controller_iris.yaml" />
      <rosparam command="load" file="$(find x3_control)/resource/iris.yaml" />
      <remap from="odometry" to="odometry/filtered" />
    </node>

    <node name="cmdvel_transform" pkg="subt_example" type="cmdvel_converter_rpy.py" args="cmd_vel command/roll_pitch_yawrate_thrust"/>

  </group>
</launch>
